<template>
  <div class="sidebar bg-discord-secondary flex flex-col h-full" :class="[isMobile ? (isOpen ? 'w-64' : 'w-0') : 'w-64']">
    <div class="p-4 font-semibold text-white flex justify-between items-center">
      <div>{{ $t('sidebar.channels') }}</div>
      <button v-if="isMobile && isOpen" @click="toggleSidebar" class="text-discord-text-gray hover:text-white">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>
    
    <!-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏ –∫–∞–Ω–∞–ª–æ–≤ -->
    <div class="px-3 py-2">
      <div class="mb-2">
        <div class="text-xs font-semibold text-discord-text-gray px-2 flex items-center mb-1">
          <span>–£–ü–†–ê–í–õ–ï–ù–ò–ï –û–ë–£–ß–ï–ù–ò–ï–ú</span>
        </div>
        <div class="space-y-0.5">
          <div 
            v-for="channel in educationChannels" 
            :key="channel.id"
            @click="handleChannelAction(channel.id)"
            class="channel-item flex items-center px-2 py-1 rounded cursor-pointer"
            :class="{'bg-discord-dark-hover': currentChannel === channel.id}"
          >
            <span v-if="channel.id === 'lecture'" class="mr-2">üìù</span>
            <span v-else-if="channel.id === 'student-management'" class="mr-2">üë•</span>
            <span v-else-if="channel.id === 'assignments'" class="mr-2">üìö</span>
            <span v-else-if="channel.id === 'tests'" class="mr-2">üìä</span>
            <span v-else-if="channel.id === 'resources'" class="mr-2">üìÇ</span>
            <span class="truncate">{{ channel.name }}</span>
          </div>
        </div>
      </div>
      
      <div class="mb-2">
        <div class="text-xs font-semibold text-discord-text-gray px-2 flex items-center mb-1">
          <span>–ê–ù–ê–õ–ò–¢–ò–ö–ê</span>
        </div>
        <div class="space-y-0.5">
          <div 
            v-for="channel in analyticsChannels" 
            :key="channel.id"
            @click="handleChannelAction(channel.id)"
            class="channel-item flex items-center px-2 py-1 rounded cursor-pointer"
            :class="{'bg-discord-dark-hover': currentChannel === channel.id}"
          >
            <span v-if="channel.id === 'student-progress'" class="mr-2">üìà</span>
            <span v-else-if="channel.id === 'attendance'" class="mr-2">üìÖ</span>
            <span v-else-if="channel.id === 'reports'" class="mr-2">üìë</span>
            <span class="truncate">{{ channel.name }}</span>
          </div>
        </div>
      </div>
    </div>
    
    <div class="user-controls p-3 bg-discord-dark flex items-center">
      <div 
        @click="handleChannelAction('profile')"
        class="avatar w-8 h-8 rounded-full bg-discord-accent flex items-center justify-center text-white font-bold cursor-pointer hover-effect"
      >
        {{ userInitials }}
      </div>
      <div class="ml-2 flex-1">
        <div 
          @click="handleChannelAction('profile')" 
          class="text-sm text-white font-medium cursor-pointer hover-effect"
        >
          {{ userStore.username }}
        </div>
        <div class="text-xs flex items-center">
          <span class="px-1.5 py-0.5 bg-discord-accent rounded-sm text-white text-xs mr-1">
            {{ userStore.isTeacher ? $t('auth.teacher') : $t('auth.student') }}
          </span>
        </div>
      </div>
    </div>
  </div>
  
  <!-- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö -->
  <div v-if="isMobile && !isOpen" 
       class="mobile-sidebar-toggle fixed top-16 left-4 z-50 bg-discord-accent rounded-full p-2 shadow-lg"
       @click="toggleSidebar">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
  </div>
</template>

<script setup>
import { ref, computed, onMounted, onUnmounted, watch } from 'vue';
import { useUserStore } from '../../stores/user';
import { useChannelStore } from '../../stores/channels';
import { useI18n } from 'vue-i18n';
import { useRouter, useRoute, onBeforeRouteUpdate } from 'vue-router';
import mitt from 'mitt';

const userStore = useUserStore();
const channelStore = useChannelStore();
const { t } = useI18n();
const router = useRouter();
const route = useRoute();

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π Event Bus
const emitter = mitt();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º Event Bus –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export const channelBus = {
  on: emitter.on,
  off: emitter.off,
  emit: emitter.emit
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
const isOpen = ref(false);
const isMobile = ref(false);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
const checkMobile = () => {
  isMobile.value = window.innerWidth < 768;
  if (!isMobile.value) {
    isOpen.value = true;
  } else {
    isOpen.value = false;
  }
};

const toggleSidebar = () => {
  isOpen.value = !isOpen.value;
};

// –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª—ã –∏–∑ —Å—Ç–æ—Ä–∞
const channels = computed(() => channelStore.channels);

const currentChannel = computed({
  get: () => channelStore.currentChannelId,
  set: (value) => channelStore.setCurrentChannel(value)
});

const selectChannel = (channelId) => {
  handleChannelAction(channelId);
};

const userInitials = computed(() => {
  const username = userStore.username || '';
  return username.substring(0, 2).toUpperCase();
});

// –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
watch(() => channelStore.currentChannelId, (newChannelId) => {
  console.log('Current channel ID changed in store:', newChannelId);
  // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ —Å–º–µ–Ω–µ –∫–∞–Ω–∞–ª–∞
  channelBus.emit('channel-changed', newChannelId);
}, { immediate: true });

const handleChannelAction = (channelId) => {
  console.log('handleChannelAction called with:', channelId);
  
  try {
    // –ï—Å–ª–∏ —ç—Ç–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞–Ω–∞–ª, –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞—Ä—à—Ä—É—Ç
    if (channelId === 'profile') {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –≤ query –ø–∞—Ä–∞–º–µ—Ç—Ä–µ
      const currentChannelId = channelStore.currentChannelId;
      
      console.log('Navigation to profile, saving channel:', currentChannelId);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
      router.push({ 
        path: '/profile',
        query: { channel: currentChannelId }
      }).catch(err => {
        console.error('Navigation error:', err);
      });
      return;
    }
    
    // –ï—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ (teacher –∏–ª–∏ student)
    const routeName = router.currentRoute.value.name;
    const correctRouteName = userStore.isTeacher ? 'Teacher' : 'Student';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª
    currentChannel.value = channelId;
    channelStore.setCurrentChannel(channelId);
    console.log('Channel set to:', channelId);
    
    // –ï—Å–ª–∏ –º—ã –Ω–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
    if (routeName !== correctRouteName) {
      console.log('Redirecting to correct page:', correctRouteName);
      router.push({
        path: userStore.isTeacher ? '/teacher' : '/student'
      }).catch(err => {
        console.error('Navigation error:', err);
      });
    }
  } catch (error) {
    console.error('Error in handleChannelAction:', error);
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
  if (isMobile.value) {
    isOpen.value = false;
  }
};

// Computed —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –≥—Ä—É–ø–ø–∞–º
const educationChannels = computed(() => {
  return channels.value.filter(channel => channel.group === 'education');
});

const analyticsChannels = computed(() => {
  return channels.value.filter(channel => channel.group === 'analytics');
});

// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
onMounted(() => {
  checkMobile();
  window.addEventListener('resize', checkMobile);
  
  // –ü–æ–ª—É—á–∞–µ–º query-–ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const route = router.currentRoute.value;
  const savedChannel = route.query.channel;
  
  // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –∏ –º—ã –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ñ–∏–ª—è,
  // –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∫–∞–∫ —Ç–µ–∫—É—â–∏–π
  if (savedChannel && route.name !== 'Profile') {
    channelStore.setCurrentChannel(savedChannel);
    
    // –û—á–∏—â–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
    router.replace({ query: {} });
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
onBeforeRouteUpdate((to, from, next) => {
  console.log(`Route update: ${from.path} -> ${to.path}`);
  
  // –ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∏–∑ ProfileView –∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª,
  // –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
  if (from.name === 'Profile' && to.name !== 'Profile') {
    if (from.query.channel) {
      console.log('Route update: Restoring channel from profile:', from.query.channel);
      channelStore.setCurrentChannel(from.query.channel);
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
    channels.value = [...channelStore.channels];
  }
  
  next();
});

onUnmounted(() => {
  window.removeEventListener('resize', checkMobile);
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
// –≠–∫—Å—Ç—Ä–∞–∫—Ç–∏–º –ª–æ–≥–∏–∫—É —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
const renderChannelItem = (channel) => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é –∏–∫–æ–Ω–∫—É –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –¥–ª—è –∫–∞–Ω–∞–ª–∞
  const getChannelIcon = (channelId) => {
    if (channelId === 'lecture') return <span class="mr-2">üìù</span>;
    if (channelId === 'student-management') return <span class="mr-2">üë•</span>;
    if (channelId === 'assignments') return <span class="mr-2">üìö</span>;
    if (channelId === 'tests') return <span class="mr-2">üìä</span>;
    if (channelId === 'resources') return <span class="mr-2">üìÇ</span>;
    if (channelId === 'student-progress') return <span class="mr-2">üìà</span>;
    if (channelId === 'attendance') return <span class="mr-2">üìÖ</span>;
    if (channelId === 'reports') return <span class="mr-2">üìë</span>;
    return <span class="mr-2">#</span>;
  };
  
  return (
    <div
      class={`channel-item flex items-center px-2 py-1 rounded cursor-pointer ${currentChannel.value === channel.id ? 'bg-discord-dark-hover' : ''}`}
      onClick={() => handleChannelAction(channel.id)}
    >
      {getChannelIcon(channel.id)}
      <span class="truncate">{channel.name}</span>
    </div>
  );
};

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
watch(channelStore.currentChannelId, (newId) => {
  // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
  currentChannel.value = newId;
  console.log('Channel ID changed in Sidebar:', newId);
});
</script>

<style scoped>
.sidebar {
  transition: width 0.3s ease;
  overflow: hidden;
}

.mobile-sidebar-toggle {
  transition: all 0.3s ease;
}

.channels-list {
  max-height: 300px;
  overflow-y: auto;
}

.channels-list::-webkit-scrollbar {
  width: 4px;
}

.channels-list::-webkit-scrollbar-track {
  background: transparent;
}

.channels-list::-webkit-scrollbar-thumb {
  background-color: rgba(114, 118, 125, 0.3);
  border-radius: 2px;
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
.channel-item {
  transition: all 0.2s ease;
}

.channel-item:hover {
  background-color: rgba(79, 84, 92, 0.4);
  transform: translateX(3px);
}

.hover-effect {
  transition: all 0.2s ease;
}

.hover-effect:hover {
  opacity: 0.8;
  transform: scale(1.05);
}
</style>
